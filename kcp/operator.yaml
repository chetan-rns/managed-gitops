apiVersion: v1
kind: ServiceAccount
metadata:
  name: controller-manager

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  labels:
    control-plane: argocd-operator
spec:
  selector:
    matchLabels:
      control-plane: argocd-operator
  replicas: 1
  template:
    metadata:
      labels:
        control-plane: argocd-operator
    spec:
      securityContext:
        runAsNonRoot: true
      ## Disable auto-mounting SA token 
      automountServiceAccountToken: false
      containers:
      - command:
        - /manager
        # Disabled leader election arg --leader-elect
        image: quay.io/cbanavik/gitops-operator:v1.6
        imagePullPolicy: Always
        name: manager
        securityContext:
          allowPrivilegeEscalation: false
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        volumeMounts:
        - mountPath: /kcp-kubeconfig
          name: kcp-kubeconfig
        env:
        - name: KUBECONFIG
          value: /kcp-kubeconfig/kcp-kubeconfig
        - name: ARGOCD_CLUSTER_CONFIG_NAMESPACES
          value: "openshift-gitops"
        - name: OPERATOR_NAME
          value: gitops-operator
        - name: DISABLE_DEX
          value: "false" 
        - name: DISABLE_DEFAULT_ARGOCD_INSTANCE
          value: "true"
        # Environment variables to disable functionalities that are 
        # incompatible with KCP
        - name: DISABLE_FULLY_QUALIFIED_SERVICE
          value: "true"
        - name: DISABLE_HPA
          value: "true"
        - name: DISABLE_REDIS_SCC
          value: "true"
      volumes:
      - name: kcp-kubeconfig
        secret:
          secretName: gitops-operator-kubeconfig
          items:
          - key: kubeconfig
            path: kcp-kubeconfig
      # serviceAccountName: controller-manager
      terminationGracePeriodSeconds: 10

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: manager-role
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - namespaces
  - persistentvolumeclaims
  - pods
  - secrets
  - services
  - services/finalizers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - persistentvolumeclaims
  - pods
  - secrets
  - serviceaccounts
  - services
  - services/finalizers
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - pods
  - pods/log
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - resourcequotas
  verbs:
  - create
  - delete
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - daemonsets
  - deployments
  - replicasets
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  - replicasets
  verbs:
  - get
- apiGroups:
  - apps
  resources:
  - deployments
  - replicasets
  - statefulsets
  verbs:
  - '*'
- apiGroups:
  - apps
  resourceNames:
  - gitops-operator
  resources:
  - deployments/finalizers
  verbs:
  - update
- apiGroups:
  - apps.openshift.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - argoproj.io
  resources:
  - applications
  - appprojects
  - argocds
  - argocds/finalizers
  - argocds/status
  verbs:
  - '*'
- apiGroups:
  - argoproj.io
  resources:
  - argocds
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - '*'
- apiGroups:
  - batch
  resources:
  - cronjobs
  - jobs
  verbs:
  - '*'
- apiGroups:
  - config.openshift.io
  resources:
  - clusterversions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - console.openshift.io
  resources:
  - consoleclidownloads
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - console.openshift.io
  resources:
  - consolelinks
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - monitoring.coreos.com
  resources:
  - prometheuses
  - prometheusrules
  - servicemonitors
  verbs:
  - '*'
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs:
  - create
  - get
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - '*'
- apiGroups:
  - oauth.openshift.io
  resources:
  - oauthclients
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - operators.coreos.com
  resources:
  - clusterserviceversions
  - operatorgroups
  - subscriptions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - pipelines.openshift.io
  resources:
  - '*'
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - pipelines.openshift.io
  resources:
  - gitopsservices
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - pipelines.openshift.io
  resources:
  - gitopsservices/finalizers
  verbs:
  - update
- apiGroups:
  - pipelines.openshift.io
  resources:
  - gitopsservices/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - '*'
- apiGroups:
  - route.openshift.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - route.openshift.io
  resources:
  - routes
  - routes/custom-host
  verbs:
  - '*'
- apiGroups:
  - template.openshift.io
  resources:
  - templateconfigs
  - templateinstances
  - templates
  verbs:
  - '*'

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: manager-role
subjects:
- kind: ServiceAccount
  name: controller-manager
  namespace: gitops-operator

---

# permissions to do leader election.
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: leader-election-role
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: leader-election-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: leader-election-role
subjects:
- kind: ServiceAccount
  name: controller-manager
  namespace: gitops-operator
